{"version":3,"sources":["images/Rick_and_Morty_logo.png","components/CharacterCard.js","components/CharacterList.js","components/FilterByName.js","services/apiFetch.js","services/localStorage.js","components/App.js","index.js"],"names":["CharacterCard","props","src","character","image","alt","name","species","className","status","CharacterList","characterElements","characters","map","id","FilterByName","htmlFor","type","apiFetch","fetch","then","response","json","data","results","parseInt","planet","location","episode","length","objectExport","get","key","localStorage","getItem","JSON","parse","set","value","setItem","stringify","clear","App","useState","ls","setCharacters","useEffect","charactersData","filteredCharacters","logo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAAe,G,MAAA,IAA0B,iD,OCuB1BA,EAvBO,SAACC,GAWrB,OACE,oCACE,qBAAKC,IAAKD,EAAME,UAAUC,MAAOC,IAAKJ,EAAME,UAAUG,OACtD,6BAAKL,EAAME,UAAUG,OACrB,4BAAIL,EAAME,UAAUI,UACpB,wCACS,mBAAGC,UAfiB,UAA3BP,EAAME,UAAUM,OACX,aAC6B,YAA3BR,EAAME,UAAUM,OAClB,eAC6B,SAA3BR,EAAME,UAAUM,OAClB,iBADF,WCYIC,EAhBO,SAACT,GACrB,IAAMU,EAAoBV,EAAMW,WAAWC,KAAI,SAACV,GAC9C,OACE,6BACE,cAAC,EAAD,CAAeA,UAAWA,KADnBA,EAAUW,OAMvB,OACE,kCACE,6BAAKH,OCAII,EAXM,SAACd,GACpB,OACE,qCACE,uBAAOO,UAAU,GAAGQ,QAAQ,OAA5B,iCAGA,uBAAOR,UAAU,GAAGS,KAAK,OAAOX,KAAK,OAAOQ,GAAG,aCYtCI,EApBE,WAEf,OAAOC,MADQ,6CAEZC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAYL,OAXuBA,EAAKC,QAAQX,KAAI,SAACV,GACvC,MAAO,CACLW,GAAIW,SAAStB,EAAUW,IACvBR,KAAMH,EAAUG,KAChBF,MAAOD,EAAUC,MACjBG,QAASJ,EAAUI,QACnBmB,OAAQvB,EAAUwB,SAASrB,KAC3BG,OAAQN,EAAUM,OAClBmB,QAASzB,EAAUyB,QAAQC,eCMtBC,EANM,CACnBC,IAVU,SAACC,GACX,IAAMT,EAAOU,aAAaC,QAAQF,GAClC,OAAOG,KAAKC,MAAMb,IASlBc,IAfU,SAACL,EAAKM,GAChBL,aAAaM,QAAQP,EAAKG,KAAKK,UAAUF,KAezCG,MAPY,WACZR,aAAaQ,UCgCAC,EAlCH,WACV,MAAoCC,mBAASC,EAAGb,IAAI,eAAiB,IAArE,mBAAOnB,EAAP,KAAmBiC,EAAnB,KAEA,EAAoCF,mBAASC,EAAGb,IAAI,eAAiB,IAArE,6BAIAe,qBAAU,WACkB,IAAtBlC,EAAWiB,QACbX,IAAWE,MAAK,SAAC2B,GACfF,EAAcE,QAGjB,IAEHD,qBAAU,WACRF,EAAGP,IAAI,aAAczB,KACpB,CAACA,IAEJ,IAAMoC,EAAqBpC,EAE3B,OACE,sBAAKJ,UAAU,MAAf,UACE,iCACE,qBAAKN,IAAK+C,EAAM5C,IAAI,sBAEtB,iCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAeO,WAAYoC,WC9BnCE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83ba557f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rick_and_Morty_logo.de13d484.png\";","const CharacterCard = (props) => {\r\n  const getStatus = () => {\r\n    if (props.character.status === \"Alive\") {\r\n      return \"Alive Icon\";\r\n    } else if (props.character.status === \"unknown\") {\r\n      return \"unknown Icon\";\r\n    } else if (props.character.status === \"dead\") {\r\n      return \"dead Icon\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article>\r\n      <img src={props.character.image} alt={props.character.name} />\r\n      <h2>{props.character.name}</h2>\r\n      <p>{props.character.species}</p>\r\n      <p>\r\n        Status:<i className={getStatus()}></i>\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import CharacterCard from \"./CharacterCard\";\r\n\r\nconst CharacterList = (props) => {\r\n  const characterElements = props.characters.map((character) => {\r\n    return (\r\n      <li key={character.id}>\r\n        <CharacterCard character={character} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <ul>{characterElements}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\n\r\nconst FilterByName = (props) => {\r\n  return (\r\n    <>\r\n      <label className=\"\" htmlFor=\"name\">\r\n        Filtrar por nombre:\r\n      </label>\r\n      <input className=\"\" type=\"text\" name=\"name\" id=\"name\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","const apiFetch = () => {\r\n  const urlApi = \"https://rickandmortyapi.com/api/character\";\r\n  return fetch(urlApi)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const charactersData = data.results.map((character) => {\r\n        return {\r\n          id: parseInt(character.id),\r\n          name: character.name,\r\n          image: character.image,\r\n          species: character.species,\r\n          planet: character.location.name,\r\n          status: character.status,\r\n          episode: character.episode.length,\r\n        };\r\n      });\r\n      return charactersData;\r\n    });\r\n};\r\n\r\nexport default apiFetch;\r\n","const set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst get = (key) => {\r\n  const data = localStorage.getItem(key);\r\n  return JSON.parse(data);\r\n};\r\n\r\nconst clear = () => {\r\n  localStorage.clear();\r\n};\r\n\r\nconst objectExport = {\r\n  get: get,\r\n  set: set,\r\n  clear: clear,\r\n};\r\n\r\nexport default objectExport;\r\n","import \"../stylesheets/App.scss\";\nimport logo from \"../images/Rick_and_Morty_logo.png\";\nimport React, { useState, useEffect } from \"react\";\nimport CharacterList from \"./CharacterList\";\nimport FilterByName from \"./FilterByName\";\nimport apiFetch from \"../services/apiFetch\";\nimport ls from \"../services/localStorage\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState(ls.get(\"characters\") || []);\n\n  const [filterText, setFilterText] = useState(ls.get(\"filterText\") || \"\");\n  //ls.get('filterText', '') \"Maricarmen\"\n  /*const [filterGender, setFilterGender] = useState(ls.get(\"filterGender\", \"\"));*/\n\n  useEffect(() => {\n    if (characters.length === 0) {\n      apiFetch().then((charactersData) => {\n        setCharacters(charactersData);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n  }, [characters]);\n\n  const filteredCharacters = characters;\n\n  return (\n    <div className=\"App\">\n      <header>\n        <img src={logo} alt=\"Ricky and Morty\" />\n      </header>\n      <main>\n        <FilterByName />\n        <CharacterList characters={filteredCharacters} />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/reset.scss\";\nimport \"./stylesheets/mixins.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}