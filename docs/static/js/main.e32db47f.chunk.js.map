{"version":3,"sources":["images/Rick_and_Morty_logo.png","components/CharacterCard.js","components/Error.js","components/CharacterList.js","components/FilterByName.js","components/FilterBySpecies.js","components/Filters.js","components/CharacterDetail.js","services/apiFetch.js","services/localStorage.js","components/App.js","index.js"],"names":["CharacterCard","props","to","character","id","src","image","alt","name","className","species","Error","errorCode","filterName","CharacterList","characters","length","characterElements","map","propsTypes","PropTypes","array","FilterByName","htmlFor","type","value","onChange","ev","handleFilter","target","key","FilterBySpecies","filterSpecies","Filters","onSubmit","preventDefault","onClick","reset","CharacterDetail","statusCharacter","status","getStatus","origin","episode","apiFetch","fetch","then","response","json","data","results","sort","a","b","localeCompare","objectExport","get","localStorage","getItem","JSON","parse","set","setItem","stringify","clear","App","useState","ls","setCharacters","setFilterName","setFilterSpecies","useEffect","charactersData","filteredCharacters","filter","toLowerCase","includes","logo","exact","path","render","propsId","routeCharacterId","match","params","characterId","foundCharacter","find","parseInt","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e32db47f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rick_and_Morty_logo.de13d484.png\";","import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CharacterCard = (props) => {\r\n  const getSpecies = () => {\r\n    const speciesCharacter = props.character.species;\r\n    if (speciesCharacter === \"Alien\") {\r\n      return \"fas fa-hand-spock\";\r\n    } else {\r\n      return \"fas fa-user-alt\";\r\n    }\r\n  };\r\n  return (\r\n    <Link to={`/character/${props.character.id}`}>\r\n      <article>\r\n        <img src={props.character.image} alt={props.character.name} />\r\n        <h2>{props.character.name}</h2>\r\n        <p>\r\n          <i className={getSpecies()}>{props.character.species}</i>\r\n        </p>\r\n      </article>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n\r\nCharacterCard.propTypes = {\r\n  character: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    species: PropTypes.string,\r\n    image: PropTypes.string,\r\n  }),\r\n};\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Error = (props) => {\r\n  const renderError = () => {\r\n    if (props.errorCode === 200) {\r\n      return (\r\n        <article className=\"\">\r\n          No hay ningún personaje que coincida con la palabra:\r\n          <span className=\"\"> {props.filterName}</span>\r\n        </article>\r\n      );\r\n    } else if (props.errorCode === 400) {\r\n      return (\r\n        <article className=\"\">\r\n          <h2 className=\"\">This character doesn't exist.</h2>\r\n          <Link to=\"/\">\r\n            <button className=\"\">Back to character list</button>\r\n          </Link>\r\n        </article>\r\n      );\r\n    } else {\r\n      return <p className=\"\">Page not found</p>;\r\n    }\r\n  };\r\n\r\n  return <div className=\"\">{renderError()}</div>;\r\n};\r\n\r\nexport default Error;\r\n","import CharacterCard from \"./CharacterCard\";\r\nimport PropTypes from \"prop-types\";\r\nimport Error from \"./Error\";\r\n\r\nconst CharacterList = (props) => {\r\n  // Pinta el componente error en su estado 200 si la búsqueda no tiene resultados\r\n  if (props.characters.length === 0) {\r\n    return <Error filterName={props.filterName} errorCode={200} />;\r\n  }\r\n  const characterElements = props.characters.map((character) => {\r\n    return (\r\n      <li key={character.id}>\r\n        <CharacterCard character={character} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <ul>{characterElements}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n\r\nCharacterList.propsTypes = {\r\n  characters: PropTypes.array,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst FilterByName = (props) => {\r\n  // Evento que maneja el value del input en referencia a su key\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"\" htmlFor=\"name\">\r\n        Filter by name:\r\n      </label>\r\n      <input\r\n        className=\"\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        value={props.filterName}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n\r\nFilterByName.propTypes = {\r\n  handleChange: PropTypes.func,\r\n  filterName: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst FilterBySpecies = (props) => {\r\n  // Evento que maneja el value del input en referencia a su key\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"species\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label className=\"\" htmlFor=\"species\">\r\n        Filter by species:\r\n      </label>\r\n\r\n      <select\r\n        className=\"\"\r\n        name=\"species\"\r\n        id=\"species\"\r\n        value={props.filterSpecies}\r\n        onChange={handleChange}>\r\n        <option value=\"\">All</option>\r\n        <option value=\"Human\">Human</option>\r\n        <option value=\"Alien\">Alien</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterBySpecies;\r\n\r\nFilterBySpecies.propTypes = {\r\n  handleChange: PropTypes.func,\r\n  filterSpecies: PropTypes.string,\r\n};\r\n","import FilterByName from \"./FilterByName\";\r\nimport FilterBySpecies from \"./FilterBySpecies\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filters = (props) => {\r\n  // Evento que quita el envio por defecto al hacer enter en input\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <section>\r\n      <form onSubmit={handleSubmit}>\r\n        <FilterByName\r\n          filterName={props.filterName}\r\n          handleFilter={props.handleFilter}\r\n        />\r\n        <FilterBySpecies\r\n          filterSpecies={props.filterSpecies}\r\n          handleFilter={props.handleFilter}\r\n        />\r\n        <button className=\"\" onClick={props.reset}>\r\n          <i className=\"far fa-trash-alt\"></i> Reset\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n\r\nFilters.propTypes = {\r\n  reset: PropTypes.func,\r\n  handleFilter: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n  filterName: PropTypes.string,\r\n  filterSpecies: PropTypes.string,\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const getStatus = () => {\r\n    const statusCharacter = props.character.status;\r\n    if (statusCharacter === \"Alive\") {\r\n      return \"fas fa-heartbeat\";\r\n    } else if (statusCharacter === \"Dead\") {\r\n      return \"fas fa-skull-crossbones\";\r\n    } else {\r\n      return \"fas fa-question\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <Link to=\"/\">Volver</Link>\r\n        <section>\r\n          <img\r\n            className=\"\"\r\n            src={props.character.image}\r\n            alt={props.character.name}\r\n          />\r\n          <h4>{props.character.name}</h4>\r\n          <ul>\r\n            <li>\r\n              Status: <i className={getStatus()}></i>\r\n            </li>\r\n            <li>Species: {props.character.species}</li>\r\n            <li>Origin: {props.character.origin}</li>\r\n            <li>Episodes: {props.character.episode}</li>\r\n          </ul>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n\r\nCharacterDetail.propTypes = {\r\n  character: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    status: PropTypes.string,\r\n    origin: PropTypes.string,\r\n    episode: PropTypes.number,\r\n    species: PropTypes.string,\r\n    image: PropTypes.string,\r\n  }),\r\n};\r\n","const apiFetch = () => {\r\n  const urlApi = \"https://rickandmortyapi.com/api/character\";\r\n  return fetch(urlApi)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const orderAllCharactersByName = data.results.sort((a, b) =>\r\n        a.name.localeCompare(b.name)\r\n      );\r\n      const charactersData = orderAllCharactersByName.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          image: character.image,\r\n          status: character.status,\r\n          species: character.species,\r\n          origin: character.origin.name,\r\n          episode: character.episode.length,\r\n        };\r\n      });\r\n      return charactersData;\r\n    });\r\n};\r\n\r\nexport default apiFetch;\r\n","const set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst get = (key) => {\r\n  const data = localStorage.getItem(key);\r\n  return JSON.parse(data);\r\n};\r\n\r\nconst clear = () => {\r\n  localStorage.clear();\r\n};\r\n\r\nconst objectExport = {\r\n  get: get,\r\n  set: set,\r\n  clear: clear,\r\n};\r\n\r\nexport default objectExport;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// Estilos importados\nimport \"../stylesheets/App.scss\";\nimport logo from \"../images/Rick_and_Morty_logo.png\";\n// Componentes importados\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Error from \"./Error\";\n// Servicios importados\nimport apiFetch from \"../services/apiFetch\";\nimport ls from \"../services/localStorage\";\n\nconst App = () => {\n  // Estado inicial del array principal, o se llena con el local o nos devuelve un array vacío\n  const [characters, setCharacters] = useState(ls.get(\"characters\") || []);\n  // Estado inicial del input text, o se llena con el local o nos devuelve un string vacío\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\") || \"\");\n  const [filterSpecies, setFilterSpecies] = useState(\n    ls.get(\"filterSpecies\") || \"\"\n  );\n\n  // Si el array characters esta vacío entonces llamo a la función del fetch\n  useEffect(() => {\n    if (characters.length === 0) {\n      apiFetch().then((charactersData) => {\n        setCharacters(charactersData);\n      });\n    }\n  }, []);\n\n  // Guarda los cambios de estado en localStorage\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n    ls.set(\"filterName\", filterName);\n    ls.set(\"filterSpecies\", filterSpecies);\n  }, [characters, filterName, filterSpecies]);\n\n  // Evento manejador del value del input para filtrar por nombre\n  const handleFilter = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    } else if (data.key === \"species\") {\n      setFilterSpecies(data.value);\n    }\n  };\n\n  // Guarda los personajes filtrados para pasarlos por props a re-pintar\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(filterName.toLowerCase());\n    })\n    .filter((character) => {\n      if (filterSpecies === \"\") {\n        return true;\n      } else {\n        return character.species === filterSpecies;\n      }\n    });\n\n  // Asigna una ruta única según el id del personaje para que se habra el componente detalle de él\n  const renderCharacterDetail = (propsId) => {\n    const routeCharacterId = propsId.match.params.characterId;\n    const foundCharacter = characters.find(\n      (character) => character.id === parseInt(routeCharacterId)\n    );\n    if (foundCharacter) {\n      return <CharacterDetail character={foundCharacter} />;\n    } else {\n      return <Error errorCode={400} />;\n    }\n  };\n\n  // Reset\n  const handleReset = () => {\n    setFilterName(\"\");\n    setFilterSpecies(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <img src={logo} alt=\"Ricky and Morty\" />\n      </header>\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters\n              reset={handleReset}\n              filterName={filterName}\n              filterSpecies={filterSpecies}\n              handleFilter={handleFilter}\n            />\n            <CharacterList\n              filterName={filterName}\n              characters={filteredCharacters}\n            />\n          </Route>\n          <Route\n            path=\"/character/:characterId\"\n            render={renderCharacterDetail}\n          />\n        </Switch>\n      </main>\n      <footer>\n        <small>Patricia Lobo &copy; 2021</small>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/reset.scss\";\nimport \"./stylesheets/mixins.scss\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}